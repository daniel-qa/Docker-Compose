# We're using version 3.7 of the Docker Compose file format
version: "3.7"
# Define services/containers
services:
  web:
    image: php-apache:5.4r3
    restart: always
    volumes:
      - /opt/dockerfile/ies_pod/volumes/deploy:/app
      - /opt/dockerfile/ies_pod/volumes/apache/fpm:/opt/docker/etc/php/fpm
      - /opt/dockerfile/ies_pod/volumes/apache/httpd:/opt/docker/etc/httpd
      - /softdata/cms:/cms
      - /opt/dockerfile/ies_pod/volumes/sessions:/sessions
      - /opt/dockerfile/ies_pod/volumes/shared:/shared
    ports:
      - "8088:80"
    networks:
      - njty-network
 
  # MySQL container
  mysql:
    # Use mysql:5.7 image
    image: mysql:5.7
    # Connect to "my-network" network, as defined below
    restart: always
    command:
      --max_allowed_packet=1000M
      --sql-mode=NO_AUTO_VALUE_ON_ZERO
    volumes:
      - .:/code
      - ./mydb:/var/lib/mysql
    networks:
      - njty-network
#      njty-network: 
#         ipv4_address: 172.20.0.3
    ports:
      - "3307:3306"
    # Pass a list of environment variables to the container
    environment:
      MYSQL_ROOT_PASSWORD: root

  # phpMyAdmin container
  phpmyadmin:
    # Use phpmyadmin/phpmyadmin:5.0.2 image
    image: phpmyadmin/phpmyadmin:5.0.2
    restart: always
    # Connect to "my-network" network, as defined below
    networks:
      - njty-network
    # Map port 8080 on the host to port 80 inside the container Syntax is: "HOST_PORT:CONTAINER_PORT"
    ports:
      - "8089:80"
    # Pass a list of environment variables to the container
    environment:
      PMA_HOST: mysql
    # Wait for "mysql" container to start first
    depends_on:
      - mysql
      
  # R Service    
  rnresq:
    image: r-base:r6
    restart: always
    volumes:
      - /opt/dockerfile/ies_pod/volumes/rscripts:/myscripts
      - /opt/dockerfile/ies_pod/volumes/k8s-cms:/cms
      - /opt/dockerfile/ies_pod/volumes/deploy:/app
      - /opt/dockerfile/ies_pod/volumes/shared:/shared
    ports:
      - "2222:22"
    networks:
      - njty-network
      
  # ADAS Service     
  adas:
    image: adas:v2
    restart: always
    command: /start.sh
    tty: true
    volumes:
      - /opt/dockerfile/ies_pod_main/volumes/adas/lampp:/opt/lampp
      - /opt/dockerfile/ies_pod_main/volumes/adas/www:/home/adas2/www
      - /softdata/shared_main/Field/ADAS:/home/adas2/pdf
    networks:
      - njty-network      

# Define networks
networks:
  njty-network:
#  njty-network: 
#    ipam: 
#      driver: default
#      config: 
#        - subnet: "172.20.0.0/24"
  
